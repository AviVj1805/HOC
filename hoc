// withDataFetching.js

import React, { Component } from 'react';

const withDataFetching = (WrappedComponent, dataSource) => {
  return class extends Component {
    state = {
      data: null,
      isLoading: false,
      error: null
    };

    componentDidMount() {
      this.setState({ isLoading: true });
      fetch(dataSource)
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to fetch data');
          }
          return response.json();
        })
        .then(data => this.setState({ data, isLoading: false }))
        .catch(error => this.setState({ error, isLoading: false }));
    }

    render() {
      const { data, isLoading, error } = this.state;

      return (
        <div>
          {isLoading && <p>Loading...</p>}
          {error && <p>Error: {error.message}</p>}
          {data && <WrappedComponent data={data} {...this.props} />}
        </div>
      );
    }
  };
};

export default withDataFetching;
